version: "3"

services:
  postgresql_db:
    container_name: postgresql_db
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgresql_data:/var/lib/postgresql/data 
    env_file:
      - .env
        
  webapp_house_finder:
    container_name: flask_house_finder
    build:
      context: ./webapp-house-finder
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    volumes:
      - ./images/api:/app/app/static/images/img-projects
      - ./images/profile:/app/app/static/images/img-profile
    environment:
      - DB_URL=${DB_URL}
      - SECRET_APP_KEY=${SECRET_APP_KEY}
      - FLASK_APP=${FLASK_APP}
      - CONFIGURATION_SETUP=${DEV_CONFIGURATION_SETUP}
      - APP_PASSWORD_EMAIL=${APP_PASSWORD_EMAIL}
      - ADMINISTER_EMAIL=${ADMINISTER_EMAIL}
    depends_on:
      - postgresql_db
    env_file:
      - .env
  
  api_house_finder:
    container_name: fastapi_house_finder
    build:
      context: ./api-house-finder
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./images/api:/app/app/static/images/img-projects
    environment:
      - DB_URL=${DB_URL}
      - SECRET_APP_KEY=${SECRET_APP_KEY}
    depends_on:
      - postgresql_db
    env_file:
      - .env
  
  test_fastapi:
    build:
      context: ./api-house-finder
      dockerfile: Dockerfile
    command: ["pytest"]
    environment:
      - DB_URL=${DB_URL}
      - TEST_APIKEY=${TEST_APIKEY}
      - TEST_TOKEN=${TEST_TOKEN}
    depends_on:
      - postgresql_db
    env_file:
      - .env

  test_flask:
    build:
      context: ./webapp-house-finder
      dockerfile: Dockerfile
    command: ["pytest", "app/tests/"]
    environment:
      - TEST_CONFIGURATION_SETUP=${TEST_CONFIGURATION_SETUP}
    env_file:
      - .env

volumes:
  postgresql-data:
  images:

